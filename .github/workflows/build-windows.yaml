name: Build Qt 5.15.16 WINDOWS

on:
  workflow_dispatch:  # Trigger manually from GitHub UI

jobs:
  
  build-windows:
    runs-on: windows-latest  # Windows 7 build using MinGW 64-bit

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install MinGW-w64 and dependencies
        run: |
          choco install mingw --version 8.1.0
          choco install make
          choco install wget
          choco install tar
          choco install python

      - name: Refresh environment variables
        run: |
          Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
      
      - name: Cache Qt 5.15.16 source
        id: cache-qt
        uses: actions/cache@v3
        with:
          path: qt-everywhere-opensource-src-5.15.16
          key: qt-5.15.16-${{ runner.os }}
          restore-keys: |
            qt-5.15.16

      - name: Download Qt 5.15.16 source
        if: steps.cache-qt.outputs.cache-hit != 'true'
        run: |
          wget https://ftp.jaist.ac.jp/pub/qtproject/archive/qt/5.15/5.15.16/single/qt-everywhere-opensource-src-5.15.16.tar.xz
          echo "2a25d4e90abd05284bf5bb01365c9b44  qt-everywhere-opensource-src-5.15.16.tar.xz" > qt-everywhere-opensource-src-5.15.16.tar.xz.md5

      - name: Verify MD5 checksum
        if: steps.cache-qt.outputs.cache-hit != 'true'
        run: |
          certutil -hashfile qt-everywhere-opensource-src-5.15.16.tar.xz MD5 | findstr /i "2a25d4e90abd05284bf5bb01365c9b44"
          if ($LASTEXITCODE -ne 0) { exit 1 }

      - name: Extract Qt 5.15.16 source
        run: |
          tar -xvf qt-everywhere-opensource-src-5.15.16.tar.xz

      - name: Cache OpenSSL
        uses: actions/cache@v3
        with:
          path: C:/openssl
          key: openssl-1.1.1l-${{ runner.os }}
          restore-keys: |
            openssl-1.1.1l

      - name: Download OpenSSL source
        run: |
          wget https://www.openssl.org/source/openssl-1.1.1l.tar.gz
          tar -xvf openssl-1.1.1l.tar.gz

      - name: Build static OpenSSL
        run: |
          cd openssl-1.1.1l
          perl Configure mingw64 no-shared --prefix=C:/openssl
          make
          make install
          cd ..

      - name: Configure and build Qt (Release)
        run: |
          mkdir qt-build-rel
          cd qt-build-rel
          ../qt-everywhere-opensource-src-5.15.16/configure -prefix C:/Qt/5.15.16 \
                      -opensource \
                      -nomake examples \
                      -nomake tests \
                      -openssl-linked \
                      -I C:/openssl/include \
                      -L C:/openssl/lib
          mingw32-make -j$(Get-ProcessorCount)
          mingw32-make install
          cd ..

      - name: Configure and build Qt (Debug)
        run: |
          mkdir qt-build-debug
          cd qt-build-debug
          ../qt-everywhere-opensource-src-5.15.16/configure -prefix C:/Qt/5.15.16 \
                      -opensource \
                      -nomake examples \
                      -nomake tests \
                      -openssl-linked \
                      -I C:/openssl/include \
                      -L C:/openssl/lib \
                      -qtlibinfix d \
                      -debug
          mingw32-make -j$(Get-ProcessorCount)
          mingw32-make install
          cd ..

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Build
          path: C:/Qt/*
